# -*- coding: utf-8 -*-
"""Signature.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zgnGSUYxK_ZsKr2dSUMo8dRw2EivzBGj
"""

import tensorflow as tf
mnist = tf.keras.datasets.mnist
(x_train, y_train),(x_test, y_test) = mnist.load_data()
print(x_train[0])

import matplotlib.pyplot as plt

plt.imshow(x_train[0],cmap=plt.cm.binary)
plt.show()

print(y_train[0])

x_train = tf.keras.utils.normalize(x_train, axis=1)
x_test = tf.keras.utils.normalize(x_test, axis=1)

print(x_train[0])

plt.imshow(x_train[0],cmap=plt.cm.binary)
plt.show()

model = tf.keras.models.Sequential()
model.add(tf.keras.layers.Flatten())
model.add(tf.keras.layers.Dense(128, activation=tf.nn.relu))
model.add(tf.keras.layers.Dense(10, activation=tf.nn.softmax))
model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

# Confusion Matrix
from sklearn.metrics import confusion_matrix
import numpy as np
import seaborn as sns

# Test the model
y_pred = np.argmax(model.predict(x_test), axis=-1)

# Confusion Matrix
conf_matrix = confusion_matrix(y_test, y_pred)
print(conf_matrix)

plt.figure(figsize=(10,7))
sns.heatmap(conf_matrix, annot=True, fmt="d", cmap="Blues", cbar=False)
plt.title("Confusion Matrix for MNIST Model")
plt.xlabel("Predicted Label")
plt.ylabel("True Label")
plt.show()